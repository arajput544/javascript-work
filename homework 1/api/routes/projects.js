const router = require('express').Router();

const projects=require('../../mock data/projects.json');
const tasks = require('../../mock data/tasks.json');
const users = require('../../mock data/users.json');
router.get('/', (req,res) => {
    const { query } = req;
    const name = query.name;    

    let all = projects;
    if(name){
        all = projects.filter((project) => {
            return project.name.toLowerCase().includes(name.toLowerCase());
        })
    }
    console.log(all);
    res.json(all);
} );


// POST /projects
router.post('/', (req, res) => {
    const { body } = req;

    // when we have a data store ours id will be generated by Mongo DB
    // for now mock id generation
    const id = projects.length + 1;

    res.json({ ...body, id });
});

// GET /projects/:id
router.get('/:id', (req, res) => {
    const { params } = req;
    const id = params.id;

    const project = projects.find((project) => {
        return project.id === parseInt(id);
    });
    const allusers = users.filter((user) => {
        user.project_id = parseInt(id);
    });
    const alltasks = tasks.filter((task) => {
        task.project_id = parseInt(id);
    });
    if (project) {
        if(allusers.length>0 || alltasks.length > 0 ){
            res.json({ project ,tasks: alltasks.length, users : allusers.length})
        }else{
            res.json(project);
        }
    } else {
       res.status(404).json({ error: `Project by id ${id} not found.` });
    }
});

router.put('/:id', (req, res) => {
    const { params, body } = req;
    const id = params.id;
    const name = params.name;

    const project = projects.find((project) => {
        return project.id = parseInt(id);
    });
   
    if (project) {
        if (name) {
            res.status(403).json({
                error: `name already exsists ${project.name}`,
            });
        } else {
            res.json({ ...project, ...body});
        }
    } else {
        res.status(404).json({ error: `Project by id ${id} not found.` });
    }

    
});



module.exports = router;
